CREATE INDEX PDV_RECEBER_IDXDATABAIXA
ON PDV_RECEBER (DT_BAIXA);

CREATE TABLE PDV_CANCELAMENTO (
    ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
    TIPO CHAR(1) NOT NULL,
    ID_VENDA INTEGER NOT NULL,
    ORDEM INTEGER NOT NULL,
    ID_PRODUTO INTEGER NOT NULL,
    QTDE NUMERIC(8,3) NOT NULL,
    QTDE_BAIXA NUMERIC(8,3),
    DATA DATE,
    USUARIO VARCHAR(100));

ALTER TABLE PDV_CANCELAMENTO
ADD CONSTRAINT PK_PDV_CANCELAMENTO
PRIMARY KEY (ID);

ALTER TABLE PDV_CANCELAMENTO
ADD CONSTRAINT FK_PDV_CANCELAMENTO_ITEM
FOREIGN KEY (ID_VENDA,TIPO,ORDEM)
REFERENCES PDV_ITENS(ID,TIPO,ORDEM)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE PDV_CANCELAMENTO
ADD CONSTRAINT FK_PDV_CANCELAMENTO_PROD
FOREIGN KEY (ID_PRODUTO)
REFERENCES PRODUTO(CODIGO)
ON DELETE CASCADE
ON UPDATE CASCADE;


SET TERM ^ ;

CREATE OR ALTER trigger pdv_devolucao_ai_estoque for pdv_devolucao
active after insert position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(new.id_produto,new.qtde_baixa,'+') ;
end^

SET TERM ; ^

SET TERM ^ ;

CREATE OR ALTER trigger pdv_devolucao_au_estoque for pdv_devolucao
active after update position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(old.ID_PRODUTO,old.QTDE_BAIXA,'-') ;
  execute procedure PRO_ENTRADA_SAIDA(new.ID_PRODUTO,new.QTDE_BAIXA,'+') ;
end^

SET TERM ; ^

SET TERM ^ ;

CREATE OR ALTER trigger pdv_devolucao_ad_estoque for pdv_devolucao
active after delete position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(old.ID_PRODUTO,old.QTDE_BAIXA,'-') ;
end^

SET TERM ; ^

SET TERM ^ ;

CREATE trigger tri_ai_pdvcancelamento_estoque for pdv_cancelamento
active after insert position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(new.id_produto,new.qtde_baixa,'+') ;
end^

SET TERM ; ^

DROP TRIGGER PDV_DEVOLUCAO_AD_ESTOQUE;

SET TERM ^ ;

CREATE OR ALTER trigger tri_ad_pdv_devolucao_estoque for pdv_devolucao
active after delete position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(old.ID_PRODUTO,old.QTDE_BAIXA,'-') ;
end^

SET TERM ; ^

DROP TRIGGER PDV_DEVOLUCAO_AU_ESTOQUE;

SET TERM ^ ;

CREATE OR ALTER trigger tri_au_pdvdevolucao_estoque for pdv_devolucao
active after update position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(old.ID_PRODUTO,old.QTDE_BAIXA,'-') ;
  execute procedure PRO_ENTRADA_SAIDA(new.ID_PRODUTO,new.QTDE_BAIXA,'+') ;
end^

SET TERM ; ^

DROP TRIGGER PDV_DEVOLUCAO_AI_ESTOQUE;

SET TERM ^ ;

CREATE OR ALTER trigger tri_ai_pdvdevolucao_estoque for pdv_devolucao
active after insert position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(new.id_produto,new.qtde_baixa,'+') ;
end^

SET TERM ; ^

SET TERM ^ ;

CREATE trigger tri_ad_pdvcancelamento_estoque for pdv_cancelamento
active after delete position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(old.ID_PRODUTO,old.QTDE_BAIXA,'-') ;
end^

SET TERM ; ^

SET TERM ^ ;

CREATE trigger tri_au_pdvcancelamento_estoque for pdv_cancelamento
active after update position 0
AS
begin
  execute procedure PRO_ENTRADA_SAIDA(old.ID_PRODUTO,old.QTDE_BAIXA,'-') ;
  execute procedure PRO_ENTRADA_SAIDA(new.ID_PRODUTO,new.QTDE_BAIXA,'+') ;
end^

SET TERM ; ^

